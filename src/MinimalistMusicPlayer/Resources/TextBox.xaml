<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- style is applied automatically to all targets of x:Type TextBox -->
	<Style x:Key="{x:Type TextBox}" TargetType="TextBox">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="MinWidth" Value="120"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">

					<!-- trigger animations -->
					<ControlTemplate.Resources>
						<Storyboard x:Key="MouseEnterAnimation">
							<ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource AccentColor}" Duration="0:0:0.2" />
							<ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" To="0,0,0,2 " Duration="0:0:0.3" />
						</Storyboard>
						<Storyboard x:Key="MouseExitAnimation" FillBehavior="Stop">
							<ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource AccentColor}" Duration="0:0:0.2" />
							<ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" To="0,0,0,1" Duration="0:0:0.3" />
						</Storyboard>
					</ControlTemplate.Resources>

					<Border	Name="Border"
							CornerRadius="0"
							Padding="2"
							Background="{StaticResource PrimaryBrush}"
							BorderBrush="{StaticResource AccentBrush}"
							BorderThickness="0,0,0,1" >

						<ScrollViewer Margin="0" x:Name="PART_ContentHost"/>

					</Border>
					<ControlTemplate.Triggers>
						<!-- MultiDataTriggers allow to use multiple triggers to set the desired properties -->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions> <!-- Conditions are ANDed -->
								<Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="False" />
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
							</MultiDataTrigger.Conditions>

							<!-- Given that conditions can only be ANDed, inversing their values, and the values of the actions will effectively give OR effect -->
							<!-- That's why the EnterActions have the mouseExitAnimation, and ExitActions have MouseEnterAnimation -->
							<MultiDataTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource MouseExitAnimation}" />
							</MultiDataTrigger.EnterActions>
							<MultiDataTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource MouseEnterAnimation}" />
							</MultiDataTrigger.ExitActions>
						</MultiDataTrigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>